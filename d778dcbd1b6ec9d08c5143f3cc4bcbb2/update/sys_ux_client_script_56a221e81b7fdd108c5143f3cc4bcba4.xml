<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes>a1dcc9e7b77c3010e69dbc16de11a93b,3eccb12bb7703010e69dbc16de11a9a1</includes>
        <macroponent display_value="Service desk landing page overview SNC">11a221e81b7fdd108c5143f3cc4bcb35</macroponent>
        <name>UpdateEvamCardStateVariables</name>
        <preset/>
        <required_translations/>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
async function handler({
    api,
    event,
    helpers,
    imports
}) {
    var serviceDeskUtils = imports['sn_sow_inc.SowIncidentLandingPageUtils']();
    var sowUtils = imports['sn_sow.SowUtils']();
    var nameValueMap = sowUtils.getNameValueMap(event.payload.params.query);
    var currentVizSelection = {};
    var previousVizSelection = {};
    var value = event.context.item.value;
    var payload = event.payload;
    currentVizSelection.table = value.datasource[0].tableOrViewName;
    currentVizSelection.query = payload.params.query + value.updated_on;
    currentVizSelection.evamId = value.evamId;
    currentVizSelection.elementId = value.id;
    currentVizSelection.recordCount = payload.data.value;
    currentVizSelection.listView = value.listView;
    currentVizSelection.groupByField = value.groupBy[0].groupBy[0].groupByField;
    if (currentVizSelection.table == 'task_sla')
        currentVizSelection.title = await serviceDeskUtils.fetchTitleForSLA(payload.params.query, api.state.reportRanges, helpers);
    else {
        currentVizSelection.title = await serviceDeskUtils.fetchTitle(currentVizSelection.table, nameValueMap, event.payload.data.groupBy[0], api.state.groupMode);
        const translations = api.state.translations;
        if (translations.hasOwnProperty(currentVizSelection.title))
            currentVizSelection.title = translations[currentVizSelection.title];
    }

    previousVizSelection = { ...currentVizSelection
    };
    previousVizSelection.groupBy = payload.data.groupBy[0];
    previousVizSelection.rawQuery = payload.params.query;

    api.setState('pageCursor', () => 'init');
    api.setState('pageNumber', () => 0);
    api.setState('currentVizSelection', currentVizSelection);
    api.setState('previousVizSelection', previousVizSelection);
    api.setState('listRefreshRequested', {
        timestamp: new Date().getTime()
    });
    if (api.state.groupMode)
        api.setState('listView', 'sow_landing_page');
    else
        api.setState('listView', 'sow_landing_page_assigned');
    api.data.get_datetime_now.refresh();
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>Terry.Lillo</sys_created_by>
        <sys_created_on>2022-12-12 22:17:41</sys_created_on>
        <sys_id>56a221e81b7fdd108c5143f3cc4bcba4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UpdateEvamCardStateVariables</sys_name>
        <sys_package display_value="Invoice Portal" source="d778dcbd1b6ec9d08c5143f3cc4bcbb2">d778dcbd1b6ec9d08c5143f3cc4bcbb2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Invoice Portal">d778dcbd1b6ec9d08c5143f3cc4bcbb2</sys_scope>
        <sys_update_name>sys_ux_client_script_56a221e81b7fdd108c5143f3cc4bcba4</sys_update_name>
        <sys_updated_by>Terry.Lillo</sys_updated_by>
        <sys_updated_on>2022-12-12 22:17:41</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
